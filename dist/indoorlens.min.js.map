{
  "version": 3,
  "sources": ["../js/models.js", "../js/control.js", "../js/preview.js", "../js/cloud.js", "../js/inputs.js", "../js/indoorlenswidjet.js", "../js/indoorlens.js"],
  "sourcesContent": ["/* ===== models.js ===== */\n\n/* 1. Enum \u2192\u202Fa plain frozen object */\n// models.js\nexport const RenderType = Object.freeze({\n  Path: 0,\n  LineShape: 1,\n  SurfaceShape: 2,\n  Transition_NonWCHR: 3,\n  Transition_WCHR: 4,\n  Location: 5\n});\n\nexport const RenderTypeName = Object.freeze({\n  0: 'Path',\n  1: 'LineShape',\n  2: 'SurfaceShape',\n  3: 'Transition_NonWCHR',\n  4: 'Transition_WCHR',\n  5: 'Location'\n});\n\n\n/* -------- Layer color palette -------- */\n/** Colors assigned to layer0, layer1, \u2026  */\nexport const LayerColors = [\n  '#EAEAEA', // layer0\n  '#DDE1E2', // layer1\n  '#C9CED2', // layer2\n  '#C1C3C7', // layer3\n  '#586974'  // layer4\n];\n\nexport const NavigationColors = [\n  '#1e81b0', // blue\n   '#c41837', // red\n  '#00b359', // green\n \n];\n\n\n/** Convenience: get a color by numeric layer index */\nexport function getLayerColor(index) {\n  return LayerColors[index % LayerColors.length]; // wraps if index exceeds palette\n}\n\n/* -------- NodeModel -------- */\nexport class NodeModel {\n  /** @param {object} src  parsed JSON for a node */\n  constructor(src = {}) {\n    this.position = new Vec3(src.position);\n    this.associatedBranches = [...(src.associatedBranchKeys ?? [])];\n    this.guid = src.GUID ?? null;\n    //   this.selected           = !!src.selected;\n  }\n}\n\n/* -------- BranchModel -------- */\nexport class BranchModel {\n  /** @param {object} src  parsed JSON for a branch */\n  constructor(src = {}) {\n    this.key = src.key ?? 0;\n    this.groupId = src.groupId ?? '';\n    this.layerId = src.layerId ?? '';\n    this.nodeDistances = [...(src.nodeDistances ?? [])];\n\n    /* map every node object \u2192 NodeModel instance */\n    this.nodes = (src.nodes ?? []).map(n => new NodeModel(n));\n  }\n}\n\n/* -------- Path Finding -------- */\nexport class FloorResultModel {\n  /** @param {object} src  parsed JSON for a branch */\n  constructor(src = {}) {\n\n    this.nodes = (src.Nodes ?? []).map(n => new Vec3({ x: n.X ?? 0, y: n.Y ?? 0, z: n.Z ?? 0 }));\n    this.startBranchKey = src.StartBranchKey ?? '';\n    this.endBranchKey = src.EndBranchKey ?? '';\n    this.pathLength = src.PathLength ?? '';\n    this.fromId = src.FromMapLocationId ?? '';\n    this.toId = src.ToMapLocationId ?? '';\n  }\n}\n\nexport class PathFindingResultData {\n  /**\n   * @param {object<string,object>} src\n   *   parsed JSON of the form { [branchKey]: FloorResultModelPayload, \u2026 }\n   */\n  constructor(src = {}) {\n    /** @type {Record<string, FloorResultModel>} */\n    this.floors = {};\n\n    // Iterate over each [groupId, floorPayload] pair\n    for (const [groupId, floorPayload] of Object.entries(src)) {\n      this.floors[groupId] = new FloorResultModel(floorPayload);\n    }\n  }\n}\n \n/* 2. LayerModel (one layer within a group) */\nexport class LayerModel {\n  /** @param {object} src  plain JSON from Unity */\n  constructor(src = {}) {\n    this.id = src.id ?? '';\n    this.lineThickness = src.lineThickness ?? 1;\n    /* Unity Color {r,g,b,a} \u2192 CSS rgba() string */\n    const c = src.color ?? { r: 1, g: 1, b: 1, a: 1 };\n    this.color = `rgba(${c.r * 255},${c.g * 255},${c.b * 255},${c.a})`;\n    this.enabled = !!src.enabled;\n    this.renderType = Number(src.renderType) ?? RenderType.Path;\n  }\n}\n\n/* 3. GroupModel (owns a list of layers) */\nexport class GroupModel {\n  /** @param {object} src  plain JSON from Unity */\n  constructor(src = {}) {\n    this.layers = (src.layers ?? []).map(l => new LayerModel(l));\n    this.id = src.id ?? '';\n    this.groupName = src.groupName ?? '';\n    this.roofHeight = src.roofHeight ?? 0;\n    this.enabled = !!src.enabled;\n    this.opacity = src.opacity ?? 1;\n  }\n}\n\n/* -------- root wrapper (matches Unity save file) -------- */\nexport class SplineData {\n  constructor(src = {}) {\n    /* raw JSON has branches:[...] at the root */\n    // this.branches = (src.branches ?? []).map(b => new BranchModel(b));\n\n    this.branches = (src.branches ?? []).reduce((dict, bData) => {\n      const branch = new BranchModel(bData);\n      dict[branch.key] = branch;\n      return dict;\n    }, /** @type {Record<string, BranchModel>} */({}));\n\n    this.groups = (src.groups ?? []).map(g => new GroupModel(g));\n  }\n}\n\nexport const LocationType = Object.freeze({\n  Custom: 0,  // Default for unknown locations\n  Entrance: 1,  // Main building entry/exit\n  Exit: 2,  // Dedicated exit points\n  Information: 3,  // Help desk or info kiosk\n  Restroom: 4,  // Public or private restrooms\n  Elevator: 5,  // Vertical transportation\n  Escalator: 6,  // Moving stairs\n  Stairs: 7,  // Regular staircases\n  Parking: 8,  // Parking areas or garages\n  AccessibleRamp: 9,  // Ramps for wheelchairs\n  ATM: 10, // Cash withdrawal machines\n  FirstAid: 11, // Medical or emergency assistance\n  Security: 12, // Security office or checkpoint\n  FireExtinguisher: 13, // Fire safety equipment\n  EmergencyExit: 14, // Emergency-only exits\n  LostAndFound: 15, // Lost items retrieval\n  WaitingArea: 16, // Seating or resting spaces\n  ChargingStation: 17, // Phone/laptop charging point\n  VendingMachine: 18, // Snacks and drinks dispenser\n  Cafeteria: 19, // Dining or food court\n  WaterFountain: 20, // Public drinking water station\n  SmokingArea: 21, // Designated smoking zone\n  Playground: 22, // Kids' play area\n  GreenSpace: 23,\n  Kiosk: 24, // IndoorLens kiosk\n  Current_Kiosk: 25  // IndoorLens current kiosk\n});\n\nexport const LocationTypeName = Object.freeze({\n  0: 'Custom',\n  1: 'Entrance',\n  2: 'Exit',\n  3: 'Information',\n  4: 'Restroom',\n  5: 'Elevator',\n  6: 'Escalator',\n  7: 'Stairs',\n  8: 'Parking',\n  9: 'AccessibleRamp',\n  10: 'ATM',\n  11: 'FirstAid',\n  12: 'Security',\n  13: 'FireExtinguisher',\n  14: 'EmergencyExit',\n  15: 'LostAndFound',\n  16: 'WaitingArea',\n  17: 'ChargingStation',\n  18: 'VendingMachine',\n  19: 'Cafeteria',\n  20: 'WaterFountain',\n  21: 'SmokingArea',\n  22: 'Playground',\n  23: 'GreenSpace',\n  24: 'Kiosk',\n  25: 'Current_Kiosk'\n});\n\nexport const LocationDisplayType = Object.freeze({\n  None: 0,\n  Icon: 1,\n  Label: 2\n});\n\nexport const LocationDisplayTypeName = Object.freeze({\n  0: 'None',\n  1: 'Icon',\n  2: 'Label'\n});\n\nexport class LocationModel {\n  constructor(src = {}) {\n    /* raw JSON has branches:[...] at the root */\n    this.branchKey = src.branchKey ?? 0;\n    this.distance = src.distance ?? 0;\n\n  }\n\n}\n\n\nexport class MapLocationModel {\n  constructor(src = {}) {\n    /* raw JSON has branches:[...] at the root */\n    this.id = src.id ?? '';\n    this.name = src.name ?? '';\n    this.tags = src.tags ?? '';\n    this.groupId = src.groupId ?? '';\n    this.center = new Vec3(src.center);\n    this.locationType = Number(src.locationType) ?? LocationType.Custom;\n    this.locationDisplayType = Number(src.locationDisplayType) ?? LocationDisplayType.Custom;\n    this.locations = (src.locations ?? []).map(b => new LocationModel(b));\n    this.surfaceBranchKeys = [...(src.surfaceBranchKeys ?? [])];\n  }\n}\n\n\nexport class MapData {\n  constructor(src = {}) {\n    /* raw JSON has branches:[...] at the root */\n    this.id = src.id ?? '';\n    this.name = src.name ?? '';\n    this.tags = src.tags ?? '';\n    this.locations = (src.locations ?? []).map(b => new MapLocationModel(b));\n  }\n}\n\nexport class Vec3 {\n  /**\n   * @param {{ X?: number, Y?: number, Z?: number, x?: number, y?: number, z?: number }} obj\n   */\n  constructor(obj = {}) {\n    // pick whichever casing your JSON has\n    this.x = obj.x ?? obj.X ?? 0;\n    this.y = obj.y ?? obj.Y ?? 0;\n    this.z = obj.z ?? obj.Z ?? 0;\n  }\n}\n", "import { draw } from \"./preview.js\";\nexport let scale = 5; // current zoom\nexport let rotation = 0;          // radians\nexport let pan = { x: 0, y: 0 }; // current pan offset (in screen px)\n\nexport function attachControls(canvas) {\n\n    /* ---------- unified wheel handler (smooth rotation, pan, zoom) ---------- */\n    let rotating = false;                // true while in rotation inertia\n    let rotateVelocity = 0;              // keep last angular speed\n    let lastWheelTime = 0;\n \n    canvas.addEventListener(\"wheel\", e => {\n        const factor = (e.deltaMode === 1 ? 15 : 1);   // normalize units\n        const now = performance.now();\n\n        const rect = canvas.getBoundingClientRect();\n        // calculate pointer offset in CSS pixels relative to canvas center\n        const mx = e.clientX - rect.left - (rect.width / 2) - pan.x;\n        const my = e.clientY - rect.top - (rect.height / 2) - pan.y;\n\n        /* -- if inertia is active but Alt is no longer held and the user is\n             performing a predominantly vertical wheel (deltaY > deltaX),\n             stop the rotation so a new zoom gesture can begin -- */\n        if (rotating && !e.altKey && Math.abs(e.deltaY) > Math.abs(e.deltaX)) {\n            rotating = false;   // cancel inertia\n            rotateVelocity = 0;\n        }\n\n        /* ---------- ROTATE (Alt or inertia) ---------- */\n        if (e.altKey) rotating = true;                 // start / keep rotation\n\n        if (rotating) {\n            e.preventDefault();\n\n            // Some drivers emit rotation as deltaX, others as deltaX + deltaY.\n            const dTheta = (e.deltaX || -e.deltaY) * 0.002 * factor;\n            rotation += dTheta;\n            rotateVelocity = dTheta;\n            lastWheelTime = now;\n\n            // keep pivot fixed\n            const r = rot(mx, my, dTheta);\n            pan.x += mx - r.x;\n            pan.y += my - r.y;\n\n            draw();\n            return;\n        }\n\n        /* ---------- PAN (Shift) ---------- */\n        if (e.shiftKey) {\n            e.preventDefault();\n            pan.x -= e.deltaX * factor;\n            pan.y -= e.deltaY * factor;\n            draw();\n            return;\n        }\n\n        /* ---------- ZOOM (default) ------- */\n        e.preventDefault();\n        const z = Math.exp(-e.deltaY * 0.0015 * factor);\n        scale *= z;\n        pan.x -= mx * (z - 1);\n        pan.y -= my * (z - 1);\n        draw();\n    }, { passive: false });\n \n\n    let lastTouches = [];\n    canvas.addEventListener(\"touchstart\", e => {\n        e.preventDefault();\n        lastTouches = [...e.touches];\n    }, { passive: false });\n\n    canvas.addEventListener(\"touchmove\", e => {\n        e.preventDefault();\n        const [t0, t1] = lastTouches;\n        const [u0, u1] = e.touches;\n\n        if (e.touches.length === 1) {\n            // pan\n            const dx = u0.clientX - t0.clientX;\n            const dy = u0.clientY - t0.clientY;\n            pan.x += dx;\n            pan.y += dy;\n        }\n        else if (e.touches.length === 2) {\n            // midpoint before and after for pivot\n            const prevMidX = (t0.clientX + t1.clientX) / 2;\n            const prevMidY = (t0.clientY + t1.clientY) / 2;\n            const currMidX = (u0.clientX + u1.clientX) / 2;\n            const currMidY = (u0.clientY + u1.clientY) / 2;\n\n            // PINCH-ZOOM\n            const prevDist = Math.hypot(t1.clientX - t0.clientX, t1.clientY - t0.clientY);\n            const currDist = Math.hypot(u1.clientX - u0.clientX, u1.clientY - u0.clientY);\n            const z = currDist / prevDist;\n            scale *= z;\n\n            // ROTATE around midpoint\n            const prevAng = Math.atan2(t1.clientY - t0.clientY, t1.clientX - t0.clientX);\n            const currAng = Math.atan2(u1.clientY - u0.clientY, u1.clientX - u0.clientX);\n            const dAng = currAng - prevAng;\n            rotation += dAng;\n\n            // adjust pan so the midpoint stays fixed\n            pan.x += (currMidX - prevMidX);\n            pan.y += (currMidY - prevMidY);\n        }\n\n        lastTouches = [...e.touches];\n        draw();\n    }, { passive: false });\n\n    /* ----- inertia ticker: let rotation glide to a stop ----- */\n    function tick() {\n        requestAnimationFrame(tick);\n\n        if (!rotating) return;\n\n        const now = performance.now();\n        const dt = (now - lastWheelTime) / 1000;   // seconds since last wheel\n\n        // basic friction model\n        rotateVelocity *= 0.94 ** (dt * 60);\n        if (Math.abs(rotateVelocity) < 0.0001) {\n            rotating = false;\n            return;\n        }\n\n        rotation += rotateVelocity;\n        draw();\n    }\n    tick();\n}\n\nfunction rot(vx, vy, angle) {\n    const cos = Math.cos(angle), sin = Math.sin(angle);\n    return { x: vx * cos - vy * sin, y: vx * sin + vy * cos };\n}", "import { SplineData, MapData, PathFindingResultData, RenderType, NavigationColors, LocationTypeName, LocationDisplayType, Vec3 } from './models.js'; // \nimport { scale, rotation, pan } from \"./control.js\";\nimport { groupIndex, fromId, toId } from \"./inputs.js\";\nimport { attachControls } from \"./control.js\";\n\n\n// adjust path as needed\nexport let canvas = null;\nexport let ctx = null;\n\n/** give the module a canvas *after* it exists in the DOM */\nexport function initCanvas(el) {\n    canvas = el;\n    ctx = el.getContext(\"2d\");\n    attachControls(canvas);        // wheel / pan / zoom handlers\n}\n\n\n//const hostEl   = document.querySelector(\"#indoorlensmap\");\n//const inputFrom = hostEl.querySelector(\"input#from\");\n//const inputTo   = hostEl.querySelector(\"input#to\");\n\n\n// const inputFrom = window.IndoorLensWidget.inputFrom;\n// const inputTo = window.IndoorLensWidget.inputTo;\n\nexport let pathFindingResultData = null;\nlet pathData = null;\nexport let layoutData = null;\nexport let mapData = null;\n\n\n/* ---------- main draw loop ---------- */\nexport function draw() {\n    if (!layoutData) return;          // nothing to draw yet\n\n    ctx.save();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // centre + pan + zoom\n   // ctx.translate(canvas.width / 2 + pan.x, canvas.height / 2 + pan.y);\n\n// measure on\u2010screen size\n    const dpr = window.devicePixelRatio || 1;\nconst rect = canvas.getBoundingClientRect();\n// calculate the pivot in buffer\u2010pixel units\nconst pivotX = (rect.width  / 2 + pan.x)  * dpr;\nconst pivotY = (rect.height / 2 + pan.y)  * dpr;\n\n \n\n// move the origin to the correct buffer\u2010unit pivot\nctx.translate(pivotX, pivotY);\n    ctx.rotate(rotation);\n    ctx.scale(scale, scale);\n\n    /* ----- draw layout ----- */\n    for (let g = 0; g < layoutData.groups.length; g++) {\n        if (g !== groupIndex) continue;                 // show one group\n        const group = layoutData.groups[g];\n\n        for (const layer of group.layers) {\n            if (layer.renderType === RenderType.SurfaceShape) {\n                drawSurface(layer, group);\n            } else if (layer.renderType === RenderType.LineShape) {\n                drawLine(layer, group);\n            }\n        }\n    }\n    // console.log(\"scale:\", scale);\n\n    const alpha = labelAlpha(scale);\n    if (alpha > 0) {\n        ctx.globalAlpha = alpha;\n        /* ----- draw path\u2011finding surfaces (zoom\u2011dependent) ----- */\n        if (pathFindingResultData) {\n          //  const floorsZoom = Object.entries(pathFindingResultData.floors)\n           //     .filter(([gId]) => getGroupIndex(gId) === groupIndex);\n\n         //   floorsZoom.forEach(([groupId, floorResult]) => {\n\n                    for (const [groupId, floorResult] of Object.entries(pathFindingResultData.floors)) {\n\n        if(getGroupIndex(groupId)!= groupIndex) continue;\n                const fromLoc = getMapLocation(floorResult.fromId);\n                const toLoc = getMapLocation(floorResult.toId);\n                // draw under current zoom so the polygons scale\n\n                //only draw the surface if the location is transit\n                if (LocationTypeName[fromLoc.locationType] == 'Stairs' || LocationTypeName[toLoc.locationType] == 'Elevator') {\n                    drawMapLocationSurface(fromLoc, NavigationColors[0]);   // base blue\n                }\n                if (LocationTypeName[toLoc.locationType] == 'Stairs' || LocationTypeName[toLoc.locationType] == 'Elevator') {\n                    drawMapLocationSurface(toLoc, NavigationColors[0]);\n                }\n            }\n        }\n        // override colours for start / end\n        let fromMapLocation = getMapLocation(fromId);\n        let toMapLocation = getMapLocation(toId);\n\n        if (fromMapLocation && getGroupIndex(fromMapLocation.groupId) === groupIndex) drawMapLocationSurface(fromMapLocation, NavigationColors[2]); //  \n        if (toMapLocation && getGroupIndex(toMapLocation.groupId) === groupIndex) drawMapLocationSurface(toMapLocation, NavigationColors[1]); // red\n\n        /* ----- draw path polyline (zoomed) ----- */\n        if (pathFindingResultData) {\n         //   const floorsLine = Object.entries(pathFindingResultData.floors)\n              //  .filter(([gId]) => getGroupIndex(gId) === groupIndex);\n\n         //   floorsLine.forEach(([groupId, floorResult]) => {\n                                for (const [groupId, floorResult] of Object.entries(pathFindingResultData.floors)) {\n\n        if(getGroupIndex(groupId)!= groupIndex) continue;\n                const verts = floorResult.nodes;\n                if (verts.length > 0) {\n                    ctx.save();\n                    ctx.lineWidth = 2 / scale;   // keep 2px on\u2011screen\n                    ctx.strokeStyle = NavigationColors[0];\n                    ctx.beginPath();\n                    ctx.moveTo(verts[0].x, verts[0].z);\n                    for (let k = 1; k < verts.length; k++) {\n                        ctx.lineTo(verts[k].x, verts[k].z);\n                    }\n                    ctx.stroke();\n                    ctx.restore();\n                }\n            }\n        }\n        /* ---------------------------------------- */\n\n        /* ----- draw icons and labels (rotate\u2011only, no scale) ----- */\n        if (!mapData) return;\n        for (const loc of mapData.locations) {\n            if (getGroupIndex(loc.groupId) !== groupIndex) continue;\n\n            // ICONS --------------------------------------------------\n            if (loc.locationDisplayType === LocationDisplayType.Icon) {\n                const entry = loadIcon(iconNameFor(loc));\n                if (entry.loaded) {\n                    // Project world centre \u2192 screen coords (pan + scale + rotate)\n\n\n                    const size = 36;\n                    ctx.save();\n                    // Move to screen position, then un\u2011rotate so icon faces \u201Cnorth\u201D\n                    ctx.translate(loc.center.x, loc.center.z);\n                    ctx.rotate(-rotation);\n                    ctx.scale(1 / scale, 1 / scale); // 3. cancel zoom\n\n                    ctx.drawImage(entry.img, -size / 2, -size / 2, size, size);\n                    ctx.restore();\n                }\n            }\n\n            // LABELS -------------------------------------------------\n            if (loc.locationDisplayType === LocationDisplayType.Label) {\n                const label = loc.name || LocationTypeName[loc.locationType];\n\n                ctx.save();\n\n                ctx.translate(loc.center.x, loc.center.z);\n                ctx.rotate(-rotation);          // upright text\n                ctx.scale(1 / scale, 1 / scale);\n\n                ctx.font = \"20px Arial\";\n                ctx.textAlign = \"center\";\n                ctx.textBaseline = \"middle\";\n                ctx.fillStyle = \"#000\";\n                ctx.fillText(label, 0, 0);\n                ctx.restore();\n            }\n        }\n        ctx.restore();\n    }\n}\n\n\n\n/* ---------- pick an alpha based on zoom ---------- */\nfunction labelAlpha(scale) {\n    if (scale >= 4) return 1;                // full opacity\n    if (scale <= 3) return 0;                // fully hidden\n    return (scale - 3) / 0.5;                // 3.0\u2011\u2192\u20113.5  lerp 0\u21921\n}\nconst iconCache = new Map();     // filename -> { img, loaded }\n\nfunction loadIcon(filename) {\n    if (iconCache.has(filename)) return iconCache.get(filename);\n\n    const img = new Image();\n    img.crossOrigin = \"anonymous\";\n    img.src = `https://cdn.jsdelivr.net/gh/badrdouah/IndoorLensCDN/LocationIcons/${filename}`;   // <- use LocationIcons here\n    const entry = { img, loaded: false };\n    img.onload = () => {\n        entry.loaded = true;\n        draw();                                   // redraw when it finishes\n    };\n    iconCache.set(filename, entry);\n    return entry;\n}\n\nfunction iconNameFor(loc) {\n    switch (LocationTypeName[loc.locationType]) {\n        case \"Exit\": return \"Exit.png\";\n        case \"Entrance\": return \"Entrance.png\";\n        case \"Restroom\": return \"Restroom.png\";\n        case \"Elevator\": return \"Elevator.png\";\n        case \"FireExtinguisher\": return \"FireExtinguisher.png\";\n        case \"Kiosk\": return \"Kiosk.png\";\n        case \"Information\": return \"Information.png\";\n        case \"Current_Kiosk\": return \"KioskCurrent.png\";\n        case \"MedicalKit\": return \"MedicalKit.png\";\n        case \"Stairs\": return \"Stairs.png\";\n        case \"Cafeteria\": return \"Cafeteria.png\";\n    }\n}\n\n\nfunction drawMapLocationSurface(mapLocation, color) {\n    if (mapLocation == null) return;\n    for (var i = 0; i < mapLocation.surfaceBranchKeys.length; i++) {\n        var branchKey = mapLocation.surfaceBranchKeys[i];\n        var branch = pathData.branches[branchKey];\n        if (branch == null) return;\n\n        const verts = branch.nodes.map(n => ({ x: n.position.x, y: n.position.z }));\n        ctx.fillStyle = hexToRgba(color, 0.3);\n\n        ctx.beginPath();\n        ctx.moveTo(verts[0].x, verts[0].y);\n        verts.slice(1).forEach(p => ctx.lineTo(p.x, p.y));\n        ctx.closePath();\n        ctx.fill();\n    }\n\n\n}\nfunction hexToRgba(hex, alpha = 1) {\n    const r = parseInt(hex.slice(1, 3), 16);\n    const g = parseInt(hex.slice(3, 5), 16);\n    const b = parseInt(hex.slice(5, 7), 16);\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n}\n\nfunction drawSurface(layer, group) {\n    for (const branch of Object.values(layoutData.branches)) {\n        if (branch.groupId !== group.id || branch.layerId !== layer.id) continue;\n\n        const verts = branch.nodes.map(n => ({ x: n.position.x, y: n.position.z }));\n        ctx.fillStyle = layer.color;\n        ctx.beginPath();\n        ctx.moveTo(verts[0].x, verts[0].y);\n        verts.slice(1).forEach(p => ctx.lineTo(p.x, p.y));\n        ctx.closePath();\n        ctx.fill();\n    }\n}\n\nfunction drawLine(layer, group) {\n    for (const branch of Object.values(layoutData.branches)) {\n        if (branch.groupId !== group.id || branch.layerId !== layer.id) continue;\n\n        const verts = branch.nodes.map(n => ({ x: n.position.x, y: n.position.z }));\n        ctx.lineWidth = layer.lineThickness;\n        ctx.strokeStyle = layer.color;\n        ctx.beginPath();\n        ctx.moveTo(verts[0].x, verts[0].y);\n        verts.slice(1).forEach(p => ctx.lineTo(p.x, p.y));\n        ctx.stroke();\n    }\n}\ndraw();\n\nexport function getGroupIndex(groupId) {\n    if (pathData == null) return -1;\n    for (var g = 0; g < pathData.groups.length; g++) {\n        var group = pathData.groups[g];\n        if (group.id == groupId) return g;\n    }\n    return -1;\n}\n\nfunction getMapLocation(mapLocationId) {\n    if (mapData == null) return null;\n    for (var l = 0; l < mapData.locations.length; l++) {\n        var mapLocation = mapData.locations[l];\n        if (mapLocation.id === mapLocationId) return mapLocation;\n    }\n    return null\n}\n\nexport function setMapData(v) {\n    mapData = new MapData(v);\n        // 1. Select the span inside #locationBadge\nconst badgeSpan = document.querySelector('#locationBadge span');\n console.log(mapData);\nbadgeSpan.textContent = mapData.name;\n    draw();              // if you want an immediate redraw\n}\n\nexport function setLayoutData(v) {\n    layoutData = new SplineData(v);\n    draw();              // if you want an immediate redraw\n}\n\nexport function setPathData(v) {\n    pathData = new SplineData(v);\n    draw();              // if you want an immediate redraw\n}\n\nexport function setPathFindingResultData(v) {\n    if (v == null) { pathFindingResultData = null; return; }\n    pathFindingResultData = new PathFindingResultData(v);\n    let i = 0;\n    for (const [groupId, floorResult] of Object.entries(pathFindingResultData.floors)) {\n\n        if(getGroupIndex(groupId)!= groupIndex) continue;\n        var pathLength = floorResult.pathLength;\n        var fromMapLocation = getMapLocation(floorResult.fromId);\n        var toMapLocation = getMapLocation(floorResult.toId);\n        if (fromMapLocation == null || toMapLocation == null) continue;\n\n        const fromMapLocationName = fromMapLocation.name ? fromMapLocation.name : LocationTypeName[fromMapLocation.locationType];\n        const toMapLocationName = toMapLocation.name ? toMapLocation.name : LocationTypeName[toMapLocation.locationType];\n\n        const inputFrom = document.getElementById(\"from\");\n        const inputTo = document.getElementById(\"to\");\n\n\n        let distance = '';\n        if (window.IndoorLens.unit == 'm') {\n            distance = pathLength.toFixed(1) + ' m';\n\n        } else {\n\n            distance = (pathLength * 3.28084).toFixed(1) + ' feet';;\n        }\n\n        if (i == 0) {\n            const floor = getGroupIndex(fromMapLocation.groupId);\n            inputFrom.value = fromMapLocationName + ', ' + distance + ' To ' + toMapLocationName + ' on floor ' + floor;\n            draw();\n\n        } else if (i == (Object.entries(pathFindingResultData.floors).length - 1)) {\n            const floor = getGroupIndex(toMapLocation.groupId);\n            inputTo.value = 'floor ' + floor + ', ' + distance + ' To ' + toMapLocationName;\n            draw();\n        }\n        i++;\n    }\n}\n\n\n\n\nclass IndoorLensWidget {\n    constructor(root, opts) {\n        this.root = root;          // <div> host element\n        this.opts = opts;\n        // mapId = opts.mapid;\n        this.setupDom();             // create canvas, overlay, inputs\n        this.initLogic();            // attach listeners, load data\n    }\n}", "// ajax.js  \u2013 vanilla\u2011JS version\n// ----------------------------------------------\n\nconst BASE = \"https://indoorlensmaps.azurewebsites.net/api/\";\nconst FUNCTION_KEY =\n  \"Gh8s0sQm4Uy1U3bW-6MQ2M3U3PXxpPvEngTNcYmLvBPJAzFuc1df1w==\";\n\n/* ------------------------------------------------------------------ */\n/* helper: fetch JSON and throw on non\u2011OK                              */\nasync function getJson(url) {\n  const resp = await fetch(url, { mode: \"cors\" });\n  if (!resp.ok) throw new Error(`${resp.status}\u00A0${resp.statusText} \u2013 ${url}`);\n  return resp.json();\n}\n\n/* ------------------------------------------------------------------ */\n/* load map, layout, path in parallel                                  */\nexport async function loadInitialData({\n  onMap,\n  onLayout,\n  onPath\n}) {\n  const mapId   = window.IndoorLens?.cfg?.mapid ?? \"\";\n  console.log(\"Loading map data for mapId:\", mapId);\n\n  const loadingOverlay = document.getElementById(\"loadingOverlay\");\n  const deadOverlay = document.getElementById(\"deadOverlay\");\n  loadingOverlay?.classList.remove(\"d-none\");\n  deadOverlay?.classList.add(\"d-none\");\n\n  try {\n    const mapUrl    = `${BASE}MapHandler?filename=${mapId}/map.txt&code=${FUNCTION_KEY}`;\n    const layoutUrl = `${BASE}LayoutHandler?filename=${mapId}/layout.txt&code=${FUNCTION_KEY}`;\n    const pathUrl   = `${BASE}PathHandler?filename=${mapId}/path.txt&code=${FUNCTION_KEY}`;\n\n    const [mapJson, layoutJson, pathJson] = await Promise.all([\n      getJson(mapUrl),\n      getJson(layoutUrl),\n      getJson(pathUrl)\n    ]);\n\n    onMap?.(mapJson);\n    onLayout?.(layoutJson);\n    onPath?.(pathJson);\n  } catch (err) {\n    console.error(\"loadInitialData error:\", err);\n    deadOverlay?.classList.remove(\"d-none\");\n  } finally {\n    loadingOverlay?.classList.add(\"d-none\");\n  }\n}\n\n/* ------------------------------------------------------------------ */\n/* fetch a path\u2011finding result                                         */\nexport async function requestPathFinding({\n  fromId,\n  toId,\n  WCHR = true,\n  onResult\n}) {\n  console.log(\"fromId:\", fromId);\n  console.log(\"toId:\", toId);\n  console.log(\"WCHR:\", WCHR);\n \n  const mapId   = window.IndoorLens?.cfg?.mapid ?? \"\";\n  const loadingOverlay = document.getElementById(\"loadingOverlay\");\n  const deadOverlay = document.getElementById(\"deadOverlay\");\n\n  loadingOverlay?.classList.remove(\"hidden\");\n  deadOverlay?.classList.add(\"hidden\");\n  console.log(\"Requesting path from\", fromId, \"to\", toId);\n\n  try {\n    const url =\n      `${BASE}PathFindingHandler` +\n      `?code=${FUNCTION_KEY}` +\n      `&mapid=${encodeURIComponent(mapId)}` +\n      `&from=${encodeURIComponent(fromId)}` +\n      `&to=${encodeURIComponent(toId)}` +\n      `&WCHR=${WCHR}`;\n\n    const json = await getJson(url);\n    onResult?.(json);\n  } catch (err) {\n    console.error(\"PathFinding fetch error:\", err);\n    deadOverlay?.classList.remove(\"hidden\");\n  } finally {\n    loadingOverlay?.classList.add(\"hidden\");\n  }\n}", "import { LocationTypeName } from './models.js'; // \nimport { draw, setPathFindingResultData, mapData, layoutData } from \"./preview.js\";\nimport { requestPathFinding } from \"./cloud.js\";\nimport { getGroupIndex } from \"./preview.js\";\n//import { ,setPathData,setLayoutData,setMapData} from \"./preview.js\";\n\nexport let fromId = null;\nexport let toId = null;\nexport let groupIndex = 0;\nlet wchr = false;\n\n\nexport function initInputs() {\n\n    /* ---------- group\u00A0\u00B1 buttons ---------- */\n    const btnPlus = document.getElementById('btnPlus');\n    const btnMinus = document.getElementById('btnMinus');\n    const groupLbl = document.getElementById('groupLabel');\n\n    const wchrBtn = document.getElementById('wchr');\n    const walkBtn = document.getElementById('walk');\n\n\n\n    function updateGroupLabel() {\n        groupLbl.textContent = groupIndex;\n    }\n    updateGroupLabel();\n\n    btnPlus.addEventListener('click', () => {\n        if (!layoutData) return;\n        groupIndex = Math.min(groupIndex + 1, layoutData.groups.length - 1);\n        updateGroupLabel();\n        draw();\n    });\n\n    btnMinus.addEventListener('click', () => {\n        if (!layoutData) return;\n        groupIndex = Math.max(groupIndex - 1, 0);\n        updateGroupLabel();\n        draw();\n    });\n\n    walkBtn.addEventListener('click', () => {\n        wchr = true;\n        wchrBtn.style.display = 'flex';\n        walkBtn.style.display = 'none';\n        if (fromId != null && toId != null) {\n            requestPathFinding({\n                fromId,                  // same\u2011name shorthand\n                toId,\n                WCHR: wchr,             // optional; defaults to true\n                onResult: result => {    // matches the onResult param\n                    setPathFindingResultData(result);\n                }\n            });\n        }\n    });\n\n    wchrBtn.addEventListener('click', () => {\n        wchr = false;\n        wchrBtn.style.display = 'none';\n        walkBtn.style.display = 'flex';\n        if (fromId != null && toId != null) {\n            requestPathFinding({\n                fromId,                  // same\u2011name shorthand\n                toId,\n                WCHR: wchr,             // optional; defaults to true\n                onResult: result => {    // matches the onResult param\n                    setPathFindingResultData(result);\n                }\n            });\n        }\n    });\n\n\n\n\n    const inputFrom = document.getElementById(\"from\");\n    const inputTo = document.getElementById(\"to\");\n    const resultsListFrom = document.getElementById(\"fromResultsList\");\n    const resultsListTo = document.getElementById(\"toResultsList\");\n    const btnFromClear = document.getElementById(\"btnFromClear\");\n    const btnToClear = document.getElementById(\"btnToClear\");\n\n    // toggle on every keystroke / paste / delete\n    inputFrom.addEventListener(\"input\", () => {\n        btnFromClear.disabled = inputFrom.value.trim() === \"\";\n    });\n\n    // optional: clicking the X clears the field\n    btnFromClear.addEventListener(\"click\", () => {\n        inputFrom.value = \"\";\n        btnFromClear.disabled = true;\n        inputFrom.focus();           // put the cursor back in the box\n\n        fromId = null;\n        setPathFindingResultData(null);\n        draw();\n    });\n\n\n    // toggle on every keystroke / paste / delete\n    inputTo.addEventListener(\"input\", () => {\n        btnToClear.disabled = inputTo.value.trim() === \"\";\n    });\n\n    // optional: clicking the X clears the field\n    btnToClear.addEventListener(\"click\", () => {\n        inputTo.value = \"\";\n        btnToClear.disabled = true;\n        inputFrom.focus();           // put the cursor back in the box\n\n        toId = null;\n        setPathFindingResultData(null);\n        draw();\n    });\n\n\n    /**\n     * Normalize string for case\u2010 and accent\u2010insensitive search\n     */\n    function normalizeForSearch(str) {\n        return str\n            .toLowerCase()\n            .normalize('NFD')\n            .replace(/[\\u0300-\\u036f]/g, '');\n    }\n\n    /**\n     * Search with priority: name \u2192 tags \u2192 type\n     */\n    function searchLocationsWithPriority(locations, query) {\n        const q = normalizeForSearch(query.trim());\n        if (!q) return [];\n\n        const nameMatches = [];\n        const tagMatches = [];\n        const typeMatches = [];\n\n        for (const loc of locations) {\n            const nameStr = normalizeForSearch(loc.name ?? '');\n            const tagsStr = normalizeForSearch(loc.tags ?? '');\n            const typeStr = normalizeForSearch(LocationTypeName[loc.locationType] || '');\n\n            if (nameStr.includes(q)) {\n                nameMatches.push(loc);\n            } else if (tagsStr.includes(q)) {\n                tagMatches.push(loc);\n            } else if (LocationTypeName[loc.locationType] != 'Custom' && typeStr.includes(q)) {\n                typeMatches.push(loc);\n            }\n        }\n\n        // Optional: within each bucket you can sort by earliest position:\n        const sortByIndex = (arr, fieldExtractor) =>\n            arr.sort((a, b) => {\n                const hayA = normalizeForSearch(fieldExtractor(a));\n                const hayB = normalizeForSearch(fieldExtractor(b));\n                return hayA.indexOf(q) - hayB.indexOf(q);\n            });\n\n        sortByIndex(nameMatches, loc => loc.name ?? '');\n        sortByIndex(tagMatches, loc => loc.tags ?? '');\n        sortByIndex(typeMatches, loc => LocationTypeName[loc.locationType] ?? '');\n\n        // Concatenate in priority order:\n        return [...nameMatches, ...tagMatches, ...typeMatches];\n    }\n\n    // usage:\n\n\n    // reusable autocomplete setup\n    function setupAutocomplete(inputEl, resultsEl) {\n        inputEl.addEventListener(\"input\", () => {\n\n            const q = inputEl.value.trim().toLowerCase();\n            if (!q) {\n                resultsEl.innerHTML = \"\";\n                return;\n            }\n            const matches = searchLocationsWithPriority(mapData.locations, q);\n\n\n            resultsEl.innerHTML = matches\n                .map(loc => {\n                    const floor = getGroupIndex(loc.groupId);\n                    const displayName = loc.name\n                        ? loc.name\n                        : LocationTypeName[loc.locationType];\n                    return `<li\n            class=\"list-group-item list-group-item-action p-1\"\n            data-id=\"${loc.id}\"\n          >\n            ${displayName} \u2014 floor ${floor}\n          </li>`;\n                })\n                .join(\"\");\n        });\n\n        // delegate click handling so you can pick an entry\n        resultsEl.addEventListener(\"click\", e => {\n            const li = e.target.closest(\"li\");\n            if (!li) return;\n            const selectedId = li.dataset.id;\n            const selectedText = li.textContent.trim();\n\n            // set the input value to the chosen text\n            inputEl.value = selectedText;\n            let whichField = inputEl.id;\n            // clear the dropdown\n            resultsEl.innerHTML = \"\";\n\n            // call your handler: e.g. store the chosen ID somewhere\n\n\n            if (whichField == 'from') fromId = selectedId;\n            else if (whichField == 'to') toId = selectedId;\n            draw();\n\n            if (fromId != null && toId != null) {\n                requestPathFinding({\n                    fromId,                  // same\u2011name shorthand\n                    toId,\n                    WCHR: wchr,             // optional; defaults to true\n                    onResult: result => {    // matches the onResult param\n                        setPathFindingResultData(result);\n                    }\n                });\n\n            }\n        });\n    }\n\n    // wire up both fields\n    setupAutocomplete(inputFrom, resultsListFrom);\n    setupAutocomplete(inputTo, resultsListTo);\n}   // end initInputs\n\n", "import { loadInitialData } from \"./cloud.js\";\nimport { initInputs } from \"./inputs.js\";\nimport { setMapData, setLayoutData, setPathData, initCanvas } from \"./preview.js\";\n\n\nexport class IndoorLensWidget {\n  constructor(root, opts) {\n    this.root = root;          // <div> host element\n    this.opts = opts;\n    injectIndoorLensCSS();       // inject CSS once\n    // build all DOM elements inside the host and get references\n    const refs = buildIndoorLensDOM(this.root, { width: this.opts.width, height: this.opts.height });\n\n    // store element refs\n    this.canvas = refs.canvas;\n    this.loadingOverlay = refs.loadingOverlay;\n    this.deadOverlay = refs.deadOverlay;\n    this.fromInput = refs.fromInput;\n    this.toInput = refs.toInput;\n    this.wchrBtn = refs.wchrBtn;\n    this.walkBtn = refs.walkBtn;\n    this.groupLabel = refs.groupLabel;\n\n    // initialize canvas rendering\n    initCanvas(this.canvas);\n    // attach event listeners on inputs and buttons\n    initInputs(this.root);\n\n    // load data + show spinner\n    this.initLogic();\n  }\n\n  /* attach listeners + load map / layout / path */\n  initLogic() {\n    // set current map and show spinner\n    //  window.IndoorLens.mapid = this.opts.mapid;\n    this.loadingOverlay?.classList.remove(\"hidden\");\n\n    // load initial map/layout/path data\n    loadInitialData({\n      onMap: json => setMapData(json),\n      onLayout: json => setLayoutData(json),\n      onPath: json => setPathData(json)\n    })\n      .finally(() => {\n        // hide spinner when done\n        this.loadingOverlay?.classList.add(\"hidden\");\n      });\n  }\n}\n\n\nfunction injectIndoorLensCSS() {\n  if (document.getElementById(\"indoorlens\u2011css\")) return;  // already added\n  const style = document.createElement(\"style\");\n  style.id = \"indoorlens\u2011css\";\n  style.textContent = `\n  /* ---------- page\u2011level layout ------------------------------------------------ */\n  .page-container{min-height:100vh;display:flex;flex-direction:column;justify-content:center;align-items:center;position:relative;margin:0;}\n  .canvas-wrapper{position:relative;display:inline-block;html, font-family: 'Roboto', sans-serif;}\n  .canvas-border{border:1px solid #343a40;background:#eee;display:block;}\n\n  .loading-overlay{position:absolute;inset:0;display:flex;justify-content:center;align-items:center;background:#fff;z-index:20;}\n  .loading-overlay.hidden{display:none;}\n  @keyframes spin360{to{transform:rotate(360deg);}}\n  .spin{width:64px;height:64px;animation:spin360 1.2s linear infinite;}\n\n \n\n  .top-bar{display:flex;   flex-wrap: wrap;   gap: .5rem;align-items:stretch;position:absolute;top:0;left:0;width:100%;z-index:10;padding:4px;gap:4px;box-sizing:border-box;}\n\n  .flex-col{flex:1 1 0;position:relative;}\n  .input-group{display:flex;align-items:stretch;font-size:.875rem;margin-bottom:0;}\n  .input-tag{background:#333;border:1px solid #555;border-right:0;padding:.375rem .5rem;display:flex;align-items:center;color:#eee;}\n  .input-field{flex:1 1 0;border:1px solid #555;background:#222;color:#fff;padding:.375rem .5rem;font-size:.875rem;}\n  .input-clear{background:#444;color:#fff;border:none;width:2rem;display:flex;align-items:center;justify-content:center;cursor:pointer; border-top-right-radius:0.25rem; border-bottom-right-radius:0.25rem;border-top-left-radius:0; border-bottom-left-radius:0;}\n  .input-clear:disabled{opacity:.4;cursor:default;}\n\n  .results-list{position:absolute;left:0;right:0;top:100%;margin-top:.25rem;z-index:11;max-height:200px;overflow-y:auto;list-style:none;padding:0;background:#222; border:1px solid #555;color:#fff;text-align:left;}\n  .results-list li{padding:.25rem .5rem;cursor:pointer;color:inherit;text-align:left;}\n  .results-list li:hover{background:#3a3a3a;}\n  .results-list:empty{display:none;}\n\n  /* on small screens, stack everything */\n\n/* Mobile stack: each flex-col (From/To) gets its own row */\n@media (max-width: 768px) {\n\n \n  .top-bar {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    gap: 0.5rem;          /* space between rows */\n  }\n\n  .flex-col {\n    flex: none;           /* cancel the default flex:1 1 0 */\n    width: 100%;          /* full width of the .top-bar */\n    margin-bottom: 0.75rem;\n  }\n\n  /* keep the label/field/button in one line */\n  .input-group {\n    display: flex;\n    flex-wrap: nowrap !important;\n   align-items: stretch;  /* children (including .input-clear) fill the group height */\n  }\n  .input-field {\n    flex: 1 1 auto;\n    min-width: 0;\n  }\n \n  .input-clear {\n    flex: 0 0 auto;\n  }\n\n  .input-tag {\n  flex: 0 0 4rem;      /* never shrink or grow, always 4rem wide */\n  min-width: 4rem;     /* ensures the same baseline width */\n  text-align: center;  /* center the text within the label */\n}\n\n \n.input-clear {\n  align-self: stretch;   /* full height */\n  border-top-right-radius: 0.25rem;\n  border-bottom-right-radius: 0.25rem;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n/* Restore square shape for the WCHR/Walk toggles */\n.accessibility-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n   margin-left: auto;\n  align-self: stretch;    /* match input-row height if in the same flex container */\n  aspect-ratio: 1 / 1;    /* keep width == height */\n}\n}\n  .brand-badge,\n  .location-badge {\n    position: absolute;\n    bottom: 12px;\n    padding: 0.25rem 0.6rem;\n    display: flex; align-items: center;\n    font-family: 'Roboto', sans-serif;\n  }\n\n   /* left for brand */\n  .brand-badge {\n    left: 12px;\n  }\n\n  /* right for location */\n  .location-badge {\n    right: 12px;\n  }\n\n  .brand-badge img,\n  .location-badge img {\n    width: 20px;\n    height: 20px;\n \n  }\n \n   .brand-badge,\n  .location-badge   span {\n  margin-left: 0.5rem;\n  font-weight: 600;\n  color: #0c0c0c;\n  font-family: 'Roboto', sans-serif;\n}\n \n  #groupPanel{position:absolute;right:12px;top:50%;transform:translateY(-50%);display:flex;flex-direction:column;align-items:center;background:rgba(0,0,0,.2);border:2px solid #ffffff33;border-radius:.3rem;padding:.1rem;}\n  #groupPanel span{color:#fff;font-weight:600;padding:0 .1rem;}\n  .panel-btn{width:28px;height:28px;padding:0;margin-bottom:.25rem;background:#444;border:1px solid #555;font-size:1rem;line-height:1;display:flex;align-items:center;justify-content:center;cursor:pointer;color:#fff;border-radius:.25rem;}\n  .panel-btn:last-child{margin-bottom:0;}\n\n  .accessibility-btn{width:2.5rem;align-self:stretch;padding:0;background:#444;border:1px solid #555;color:#fff;display:flex;align-items:center;justify-content:center;font-size:1rem;border-radius:.25rem;box-sizing:border-box;}\n\n  .hidden{display:none;}\n  `;\n  document.head.appendChild(style);\n}\n\n/**\n * Dynamically constructs the HTML/CSS structure for the map widget.\n * @param {HTMLElement} host  container to append into\n * @param {{width:number, height:number}} opts\n * @returns {Object} references to created elements\n */\nexport function buildIndoorLensDOM(host, { width = 1000, height = 600 } = {}) {\n  // Ensure styles are loaded\n  injectIndoorLensCSS();\n\n  // wrapper container: responsive sizing\n  const wrapper = document.createElement(\"div\");\n  wrapper.className = \"canvas-wrapper\";\n  const cssWidth = typeof width === 'number' ? `${width}px` : width;\n  const cssHeight = typeof height === 'number' ? `${height}px` : height;\n  wrapper.style.width = cssWidth;\n  wrapper.style.height = cssHeight;\n  host.appendChild(wrapper);\n\n  // canvas fills wrapper\n  const canvasEl = document.createElement(\"canvas\");\n  canvasEl.id = \"c\";\n  canvasEl.className = \"canvas-border\";\n  canvasEl.style.width = \"100%\";\n  canvasEl.style.height = \"100%\";\n  wrapper.appendChild(canvasEl);\n\n  // after layout, size internal buffer for high-DPR\n  requestAnimationFrame(() => {\n    const rect = canvasEl.getBoundingClientRect();\n    const dpr = window.devicePixelRatio || 1;\n    canvasEl.width = Math.round(rect.width * dpr);\n    canvasEl.height = Math.round(rect.height * dpr);\n    const ctx = canvasEl.getContext(\"2d\");\n    ctx.scale(dpr, dpr);\n  });\n  // overlays\n  wrapper.insertAdjacentHTML(\"beforeend\", `\n    <div id=\"loadingOverlay\" class=\"loading-overlay hidden\">\n      <img src=\"https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Loader.png\" class=\"spin\" alt=\"loading\"/>\n    </div>\n    <div id=\"deadOverlay\" class=\"loading-overlay hidden\">\n      <img src=\"https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Dead.png\" alt=\"dead\"/>\n    </div>`);\n\n  // top bar with from/to and buttons\n  wrapper.insertAdjacentHTML(\"beforeend\", `\n    <div class=\"top-bar\">\n      <div class=\"flex-col\">\n        <div class=\"input-group\">\n          <span class=\"input-tag\">From</span>\n          <input id=\"from\" type=\"text\" class=\"input-field\" placeholder=\"Search from\u2026\" />\n          <button id=\"btnFromClear\" class=\"input-clear\" disabled>&times;</button>\n        </div>\n        <ul id=\"fromResultsList\" class=\"results-list\"></ul>\n      </div>\n      <div class=\"flex-col\">\n        <div class=\"input-group\">\n          <span class=\"input-tag\">To</span>\n          <input id=\"to\" type=\"text\" class=\"input-field\" placeholder=\"Search to\u2026\" />\n          <button id=\"btnToClear\" class=\"input-clear\"  disabled>&times;</button>\n        </div>\n        <ul id=\"toResultsList\" class=\"results-list\"></ul>\n      </div>\n      <button id=\"wchr\" class=\"accessibility-btn hidden\">\n        <img src=\"https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Wchr.png\" alt=\"Wheelchair\" width=\"16\" height=\"16\">\n      </button>\n      <button id=\"walk\" class=\"accessibility-btn\">\n        <img src=\"https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/Walk.png\" alt=\"Walk\" width=\"16\" height=\"16\">\n      </button>\n    </div>`);\n\n  // brand badge\n  wrapper.insertAdjacentHTML(\"beforeend\", `\n \n<div class=\"brand-badge\">\n  <img src=\"https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/IconDark.png\" alt=\"IndoorLens icon\" />\n  <span>IndoorLens.com</span>\n</div>\n\n \n<div id=\"locationBadge\" class=\"location-badge\"  >\n  <span></span>\n  <img src=\"https://cdn.jsdelivr.net/gh/elseforty/IndoorLens/LocationIcons/LocationPin.png\" alt=\"IndoorLens location\" />\n</div>\n`);\n\n  // floor panel\n  wrapper.insertAdjacentHTML(\"beforeend\", `\n    <div id=\"groupPanel\">\n      <button id=\"btnPlus\" class=\"panel-btn\">+</button>\n      <span id=\"groupLabel\">0</span>\n      <button id=\"btnMinus\" class=\"panel-btn\">\u2212</button>\n    </div>`);\n\n  // return refs\n  return {\n    canvas: canvasEl,\n    loadingOverlay: wrapper.querySelector(\"#loadingOverlay\"),\n    deadOverlay: wrapper.querySelector(\"#deadOverlay\"),\n    fromInput: wrapper.querySelector(\"#from\"),\n    toInput: wrapper.querySelector(\"#to\"),\n    wchrBtn: wrapper.querySelector(\"#wchr\"),\n    walkBtn: wrapper.querySelector(\"#walk\"),\n    groupLabel: wrapper.querySelector(\"#groupLabel\")\n  };\n}", "\n\n// /wwwroot/js/indoorlens.js  (the file you called \u201Cfactory\u201D)\n\n/* 1. import the functional modules  */\nimport \"./models.js\";        // defines Vec3, enums, data classes\nimport \"./inputs.js\";        // attaches input listeners, exposes events\nimport \"./cloud.js\";          // data loading helpers\nimport \"./control.js\";       // UI buttons, group +/- logic\n\n\n/* ---------- public init: builds a widget on the given host ---------------- */\nexport function init(options = {}) {\n  const cfg = Object.assign(\n    { },\n    options\n  );\n\n  // expose basic config on window for other modules that rely on it\n  window.IndoorLens = window.IndoorLens || {};\n  window.IndoorLens.cfg = { target: cfg.target,mapid: cfg.mapid, apiKey: cfg.apiKey,unit: cfg.unit };\n  // expose mapid and apiKey directly for legacy access\n\n  window.IndoorLens.mapid = cfg.mapid;\n  window.IndoorLens.apiKey = cfg.apiKey;\n  window.IndoorLens.unit = cfg.unit;\n\n  const host =\n    typeof cfg.target === \"string\"\n      ? document.querySelector(cfg.target)\n      : cfg.target;\n\n  if (!host) {\n    throw new Error(\"IndoorLens: target element not found\");\n  }\n\n  import(\"./indoorlenswidjet.js\").then(({ IndoorLensWidget }) => {\n    // do this:\n\n    const widget= new IndoorLensWidget(host, cfg);\n \n  //  window.IndoorLens = window.IndoorLens || {};\n   window.IndoorLensWidget = widget;\n  });\n}\n/* make the API available to non\u2011module scripts*/\nif (typeof window !== \"undefined\") {\n  window.IndoorLens = window.IndoorLens || {};\n  window.IndoorLens.init = init;   // \u2190 attaches the function\n} "],
  "mappings": "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",
  "names": ["RenderType", "RenderTypeName", "NavigationColors", "NodeModel", "BranchModel", "FloorResultModel", "PathFindingResultData", "LayerModel", "GroupModel", "SplineData", "LocationType", "LocationTypeName", "LocationDisplayType", "LocationDisplayTypeName", "LocationModel", "MapLocationModel", "MapData", "Vec3", "init_models", "__esmMin", "src", "groupId", "floorPayload", "c", "l", "dict", "bData", "branch", "g", "b", "obj", "attachControls", "canvas", "rotating", "rotateVelocity", "lastWheelTime", "e", "factor", "now", "rect", "mx", "pan", "my", "dTheta", "rotation", "r", "rot", "draw", "z", "scale", "lastTouches", "t0", "t1", "u0", "u1", "dx", "dy", "prevMidX", "prevMidY", "currMidX", "currMidY", "prevDist", "prevAng", "dAng", "tick", "dt", "vx", "vy", "angle", "cos", "sin", "init_control", "__esmMin", "init_preview", "initCanvas", "el", "canvas", "ctx", "attachControls", "draw", "layoutData", "dpr", "rect", "pivotX", "pan", "pivotY", "rotation", "scale", "g", "groupIndex", "group", "layer", "RenderType", "drawSurface", "drawLine", "alpha", "labelAlpha", "pathFindingResultData", "groupId", "floorResult", "getGroupIndex", "fromLoc", "getMapLocation", "toLoc", "LocationTypeName", "drawMapLocationSurface", "NavigationColors", "fromMapLocation", "fromId", "toMapLocation", "toId", "verts", "k", "mapData", "loc", "LocationDisplayType", "entry", "loadIcon", "iconNameFor", "label", "filename", "iconCache", "img", "mapLocation", "color", "i", "branchKey", "branch", "pathData", "n", "hexToRgba", "p", "hex", "r", "b", "mapLocationId", "l", "setMapData", "v", "MapData", "badgeSpan", "setLayoutData", "SplineData", "setPathData", "setPathFindingResultData", "PathFindingResultData", "pathLength", "fromMapLocationName", "toMapLocationName", "inputFrom", "inputTo", "distance", "floor", "init_preview", "__esmMin", "init_models", "init_control", "init_inputs", "getJson", "url", "resp", "loadInitialData", "onMap", "onLayout", "onPath", "mapId", "loadingOverlay", "deadOverlay", "mapUrl", "BASE", "FUNCTION_KEY", "layoutUrl", "pathUrl", "mapJson", "layoutJson", "pathJson", "err", "requestPathFinding", "fromId", "toId", "WCHR", "onResult", "json", "init_cloud", "__esmMin", "initInputs", "btnPlus", "btnMinus", "groupLbl", "wchrBtn", "walkBtn", "updateGroupLabel", "groupIndex", "layoutData", "draw", "wchr", "fromId", "toId", "requestPathFinding", "result", "setPathFindingResultData", "inputFrom", "inputTo", "resultsListFrom", "resultsListTo", "btnFromClear", "btnToClear", "normalizeForSearch", "str", "searchLocationsWithPriority", "locations", "query", "q", "nameMatches", "tagMatches", "typeMatches", "loc", "nameStr", "tagsStr", "typeStr", "LocationTypeName", "sortByIndex", "arr", "fieldExtractor", "a", "b", "hayA", "hayB", "setupAutocomplete", "inputEl", "resultsEl", "matches", "mapData", "floor", "getGroupIndex", "displayName", "e", "li", "selectedId", "selectedText", "whichField", "init_inputs", "__esmMin", "init_models", "init_preview", "init_cloud", "indoorlenswidjet_exports", "__export", "IndoorLensWidget", "buildIndoorLensDOM", "injectIndoorLensCSS", "style", "host", "width", "height", "wrapper", "cssWidth", "cssHeight", "canvasEl", "rect", "dpr", "init_indoorlenswidjet", "__esmMin", "init_cloud", "init_inputs", "init_preview", "root", "opts", "refs", "initCanvas", "initInputs", "loadInitialData", "json", "setMapData", "setLayoutData", "setPathData", "init_models", "init_inputs", "init_cloud", "init_control", "init", "options", "cfg", "host", "IndoorLensWidget", "widget"]
}
